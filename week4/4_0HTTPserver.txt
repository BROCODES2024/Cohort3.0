https://petal-estimate-4e9.notion.site/Intro-to-HTTP-26c5803f153b4401aa76e9fac08ac427

Back in the day, HTTP was introduced so machines all around the world could talk to each other.

This would be useful for things like

1. Talking via im (instant messenger)
2. Emails

# Request Response model

### Request response model

The request-response model is a fundamental communication pattern.

It describes how data is exchanged between a `client` and a `server` or between two systems.
### Are there other ways for you to communicate b/w machines?

Yes, there are various other protocols that exist that let machines communicate with each other.

1. Websockets
2. WebRTC
3. GRPC

Domain names
The way to reach a sever is through its Domain name . For example
google.com
app.100xdevs.com
x.com
IPs
Every domain that you see, actually has an underlying IP that it resolves to.
You can check the ip by running the ping command.
ping google.com

When you try to visit a website, you are actually visiting the underlying IP address.

# Ports

In networking, **ports** are `logical` endpoints used by protocols to identify `specific processes`  running on a computer or server.
They help direct network traffic to the correct application or service on a system.

# Methods

HTTP methods are used to specify the type of action that the client wants to perform on a resource on the server.

You done NEED to use all the methods, but you always should. You can do everything you want with a `GET` or `POST`  method, but it is usually advisable to use them right.

### Common methods

1. GET -  Retrieve data from a server. (Get my TODOS)
2. POST - Submit data to be processed by a server. (Create a TODO)
3. PUT - Update or create a resource on the server (Update my todo)
4. DELETE - Remove a resource from the server. (Delete my todo)

# Response

The response represents what the server returns you `in response` to the request.

It could be

1. Plaintext data - Not used as often
2. HTML - If it is a website
3. JSON Data - If you want to fetch some data (user details, list of todosâ€¦)

### JSON

**JSON** stands for **JavaScript Object Notation**. It is a lightweight, text-based format used for data interchange
example:
{
  "name": "John Doe",
  "age": 30,
  "isEmployed": true,
  "address": {
    "street": "123 Main St",
    "city": "Anytown"
  },
  "phoneNumbers": ["123-456-7890", "987-654-3210"]
}